1. Install golang-migrate

go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest

2. mkdir -p cmd/api/migrations

mkdir cmd\api\migrations

(Windows)

3. Generate a new migration file:

migrate create -ext sql -dir cmd/api/migrations -seq create_users_table

tables to create:

create_roles
create_users
create_posts
create_comments
create_followers
add_indexes

migrate create -ext sql -dir cmd/api/migrations -seq create_roles
migrate create -ext sql -dir cmd/api/migrations -seq create_users
migrate create -ext sql -dir cmd/api/migrations -seq create_posts
migrate create -ext sql -dir cmd/api/migrations -seq create_comments
migrate create -ext sql -dir cmd/api/migrations -seq create_followers
migrate create -ext sql -dir cmd/api/migrations -seq add_indexes


4. Write migration SQL in 

000001_create_users_table.up.sql
and
000001_create_users_table.down.sql

5. Apply:

migrate -database "postgres://user:password@localhost:5432/dbname?sslmode=disable" -path cmd/api/migrations up

or 

[Linuz]
source .env && migrate -database "$DB_ADDR" -path cmd/api/migrations up

where DB_ADDR="postgres://postgres@localhost/nethub-go?sslmode=disable"

(in .env file)


[Windows]

set DB_ADDR=postgres://postgres@localhost/nethub-go?sslmode=disable
migrate -database "%DB_ADDR%" -path cmd/api/migrations up -limit 7


6. Rollback last:

migrate -database "postgres://user:password@localhost:5432/dbname?sslmode=disable" -path cmd/api/migrations down

7. Rollback all:

migrate -database "postgres://user:password@localhost:5432/dbname?sslmode=disable" -path cmd/api/migrations down -all

or

migrate -database "postgres://user:password@localhost:5432/dbname?sslmode=disable" -path cmd/api/migrations down 999



